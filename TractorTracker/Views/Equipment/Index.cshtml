@using Microsoft.AspNetCore.Mvc.Rendering
@inject IHtmlHelper<List<EquipmentGeneralViewModel>> Html


@model List<EquipmentGeneralViewModel>

<div>
    @if (Model != null && Model.Count > 0)
    {
        @foreach (var equipment in Model)
        {
            <div class="equipment-general-box">
                <a asp-controller="Equipment" asp-action="Details" asp-route-id="@equipment.Id" class="btn">@equipment.Name</a>
                <ul>
                    <li>@Html.Label("SerialNumber", "Serial Number") @equipment.SerialNumber</li>
                    <li>@Html.Label("Type") @equipment.Type</li>
                    <li>@Html.Label("Location") @equipment.Location</li>
                    <li>@Html.Label("Description") @equipment.Description</li>
                </ul>
            </div>

        }
    }
    else
    {
        <p>You currently have no active equipment, please add some equipment!</p>
    }

    @await Html.PartialAsync("~/Views/Equipment/Generics/CreateModal.cshtml", new CoreViewModel<TractorTracker.Web.Models.Interfaces.IBaseInterface>
{
    BaseModel = new TractorTracker.Web.Models.EquipmentGeneralViewModel(),
    Id = 0
})
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
        Add Equipment
    </button>

</div>
