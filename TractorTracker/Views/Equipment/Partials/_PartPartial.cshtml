@using Microsoft.AspNetCore.Mvc.Rendering
@inject IHtmlHelper<List<TractorTracker.Web.Models.BaseModels.Part>> Html

@model List<TractorTracker.Web.Models.BaseModels.Part>

@if (Model != null && Model.Count > 0)
{
	foreach (var part in Model)
	{
		<div class="part">
			<ul>
				<li>@Html.LabelFor(m => m.FirstOrDefault().SerialNumber) @part.SerialNumber</li>
				<li>@Html.LabelFor(m => m.FirstOrDefault().Name) @part.Name</li>
				<li>@Html.LabelFor(m => m.FirstOrDefault().Type) @part.Type</li>
				<li>@Html.LabelFor(m => m.FirstOrDefault().Quantity) @part.Quantity</li>
			</ul>
		</div>

	}
}
@await Html.PartialAsync("~/Views/Equipment/Generics/CreateModal.cshtml", new CoreViewModel<TractorTracker.Web.Models.Interfaces.IBaseInterface>
{
	BaseModel = new TractorTracker.Web.Models.BaseModels.Part(),
	Id = 0
})
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" data-itemid="part" data-model-id="addPart">
	Add Part
</button>
