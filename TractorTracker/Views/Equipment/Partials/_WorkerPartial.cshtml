@using Newtonsoft.Json
@model List<TractorTracker.Web.Models.BaseModels.Worker>


@if (Model != null && Model.Count > 0)
{
	foreach (var worker in Model)
	{
		<div class="worker">
			<ul>
				<li>@Html.LabelFor(m => m.FirstOrDefault().FirstName) @worker.FirstName</li>
				<li>@Html.LabelFor(m => m.FirstOrDefault().LastName) @worker.LastName</li>
				<li>@Html.LabelFor(m => m.FirstOrDefault().EmployeeIdNumber) @worker.EmployeeIdNumber</li>
				<li>@Html.LabelFor(m => m.FirstOrDefault().DateOfBirth) @worker.DateOfBirth</li>
				<li>@Html.LabelFor(m => m.FirstOrDefault().YearsOfService) @worker.YearsOfService</li>
				<li>@Html.LabelFor(m => m.FirstOrDefault().MonthsOfService) @worker.MonthsOfService</li>
			</ul>
			@{
				var jsonWorkerUpdate = JsonConvert.SerializeObject(Model);
			}
			
			<input type="hidden" id="workerModel" value="@jsonWorkerUpdate" />
			<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" data-itemid="worker" data-model-id="worker">
				Update Worker
			</button>
		</div>

	}
}
@{
	var newWorker = new TractorTracker.Web.Models.BaseModels.Worker();
	var jsonWorker = JsonConvert.SerializeObject(newWorker);
}	
<input type="hidden" id="workerModel" value="@jsonWorker" />
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" data-itemid="worker" data-model-id="worker">
	Add Worker
</button>
