@using Microsoft.AspNetCore.Mvc.Rendering
@using Newtonsoft.Json
@inject IHtmlHelper<List<TractorTracker.Web.Models.BaseModels.Wheel>> Html

@model List<TractorTracker.Web.Models.BaseModels.Wheel>

@if (Model != null && Model.Count > 0)
{
    @foreach (var wheel in Model)
    {
        <div id="soloWheel">
            <ul>
                <li>@Html.LabelFor(m => m.FirstOrDefault().Brand) @wheel.Brand</li>
                <li>@Html.LabelFor(m => m.FirstOrDefault().BrakeRating) @wheel.BrakeRating</li>
                <li>@Html.LabelFor(m => m.FirstOrDefault().LastBrakeChange) @wheel.LastBrakeChange</li>
            </ul>
            <div id="soloRim">
                @await Html.PartialAsync("_RimPartial", wheel.Rim)
            </div>
            <div id="soloTire">
                @await Html.PartialAsync("_TirePartial", wheel.Tire)
            </div>

            @{
                var jsonWheelUpdate = JsonConvert.SerializeObject(Model);

                <input type="hidden" id="wheelModel" value="@jsonWheelUpdate" />
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" data-itemid="wheel" data-model-id="wheel">
                    Update Wheel
                </button>
            }
           
            

        </div>

    }

}
@{
    var newWheel = new TractorTracker.Web.Models.BaseModels.Wheel();
    var jsonWheel = JsonConvert.SerializeObject(newWheel);
}
<input type="hidden" id="wheelModel" value="@jsonWheel" />
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" data-itemid="wheel" data-model-id="wheel">
    Add Wheel
</button>

