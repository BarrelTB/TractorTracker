@using Microsoft.AspNetCore.Mvc.Rendering
@inject IHtmlHelper<TractorTracker.Web.Models.BaseModels.Rim> Html


@model TractorTracker.Web.Models.BaseModels.Rim

@if (Model != null)
{
    <ul>
        <li>@Html.LabelFor(m => m.SerialNumber) @Model.SerialNumber</li>
        <li>@Html.LabelFor(m => m.Brand) @Model.Brand</li>
        <li>@Html.LabelFor(m => m.Size) @Model.Size</li>
        <li>@Html.LabelFor(m => m.RustRating) @Model.RustRating</li>
    </ul>
    @await Html.PartialAsync("~/Views/Equipment/Generics/CreateModal.cshtml", new CoreViewModel<TractorTracker.Web.Models.Interfaces.IBaseInterface>
{
    BaseModel = Model,
    Id = 0
})
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" data-itemid="rim" data-model-id="updateRim">
        Update Rim
    </button>

}
else
{
    @await Html.PartialAsync("~/Views/Equipment/Generics/CreateModal.cshtml", new CoreViewModel<TractorTracker.Web.Models.Interfaces.IBaseInterface>
{
    BaseModel = new TractorTracker.Web.Models.BaseModels.Rim(),
    Id = 0
})
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" data-itemid="rim" data-model-id="addRim">
        Add Rim
    </button>

}