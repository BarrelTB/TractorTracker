@using Microsoft.AspNetCore.Mvc.Rendering
@using Newtonsoft.Json
@inject IHtmlHelper<TractorTracker.Web.Models.BaseModels.Location> Html

@model TractorTracker.Web.Models.BaseModels.Location




@if (Model != null)
{
	<ul>
		<li>@Html.LabelFor(m => m.FieldIdentifier) @Model.FieldIdentifier</li>
		<li>@Html.LabelFor(m => m.FieldName) @Model.FieldName</li>
		<li>@Html.LabelFor(m => m.LatLocation) @Model.LatLocation</li>
		<li>@Html.LabelFor(m => m.LongLocation) @Model.LongLocation</li>
	</ul>

	var jsonLocation = JsonConvert.SerializeObject(Model);
	<input type="hidden" id="locationModel" value="@jsonLocation" />

	<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" id="location" data-model-id="location">
		Update Location
	</button>
}
else
{
	var newLocation = new TractorTracker.Web.Models.BaseModels.Location();
	var jsonLocation = JsonConvert.SerializeObject(newLocation);
	<input type="hidden" id="locationModel" value="@jsonLocation" />

	<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" id="location" data-model-id="location">
		Add Location
	</button>

}
